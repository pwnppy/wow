cmake_minimum_required(VERSION 3.8)
project(pose_covariance_publisher)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)

add_executable(pose_covariance_publisher src/pose_covariance_publisher.cpp)

ament_target_dependencies(pose_covariance_publisher
  rclcpp
  geometry_msgs
)

install(TARGETS
  pose_covariance_publisher
  DESTINATION lib/${PROJECT_NAME}
)


ament_package()







# cmake_minimum_required(VERSION 3.5)
# project(pose_covariance_publisher)

# # Find dependencies
# find_package(ament_cmake REQUIRED)
# find_package(rclcpp REQUIRED)
# find_package(geometry_msgs REQUIRED)
# find_package(sensor_msgs REQUIRED)
# find_package(pcl_conversions REQUIRED)
# find_package(pcl_ros REQUIRED)

# # Declare the executable
# add_executable(pose_covariance_publisher src/pose_covariance_publisher.cpp)

# # Link libraries
# ament_target_dependencies(pose_covariance_publisher
#   rclcpp
#   geometry_msgs
#   sensor_msgs
#   pcl_conversions
#   pcl_ros
# )

# # Install
# install(TARGETS
#   pose_covariance_publisher
#   DESTINATION lib/${PROJECT_NAME}
# )

# ament_package()

